{"version":3,"sources":["calendar/Background.js","calendar/Month.js","modules/dateInfo.js","containers/MonthContainer.js","calendar/Dates.js","containers/DatesContainer.js","calendar/ModalItem.js","contexts/today.js","calendar/Modal.js","containers/ModalContainer.js","calendar/Calendar.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["Background","className","Month","year","month","onIncrease","onDecrease","formMonth","dayjs","format","onClick","type","INCREASEMONTH","DECREASEMONTH","ONDATECLICK","date","Date","getPrevLast","y","m","getThisLast","initialState","getFullYear","getMonth","initDate","getDate","prevLast","thisLast","today","dateInfo","state","action","setMonth","p","connect","dispatch","increaseMonth","decreaseMonth","Dates","onDateClick","openModal","useState","page","setPage","getPage","useCallback","plDate","plDay","getDay","tlDate","tlDay","prev","current","Array","keys","slice","next","i","unshift","getPrevDates","push","getNextDates","concat","useEffect","initPage","firstDateIndex","indexOf","lastDateIndex","lastIndexOf","map","index","onDoubleClick","ModalItem","todo","onRemove","id","TodayContext","createContext","todayYear","todayMonth","todayDate","actions","setYear","setDate","Modal","Consumer","open","close","modalValue","setModalValue","todoList","setTodoList","onChange","e","target","value","onInsert","length","onSubmit","preventDefault","filter","placeholder","t","Calendar","modalCtrl","setModalCtrl","d","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.778c4bc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/Background.scss';\r\n\r\nconst Background = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"Background\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Background;","import React from 'react';\r\nimport {IoCaretBackSharp, IoCaretForwardSharp} from 'react-icons/io5';\r\nimport dayjs from 'dayjs';\r\nimport './styles/Month.scss';\r\n\r\nconst Month = ({year, month, onIncrease, onDecrease}) => {\r\n    const formMonth = dayjs(`${month + 1}`).format('MMMM')\r\n    return (\r\n        <div className=\"Header\">\r\n            <div onClick={onDecrease}><IoCaretBackSharp /></div>\r\n            <div className=\"month\" type=\"text\">{`${formMonth} ${year}`}</div>\r\n            <div onClick={onIncrease}><IoCaretForwardSharp /></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Month;","const INCREASEMONTH = 'dateInfo/INCREASEMONTH';\r\nconst DECREASEMONTH = 'dateInfo/DECREASEMONTH';\r\nconst ONDATECLICK = 'dateInfo/ONDATECLICK';\r\n\r\nexport const increaseMonth = () => ({type: INCREASEMONTH});\r\nexport const decreaseMonth = () => ({type: DECREASEMONTH});\r\nexport const onDateClick = p => ({type: ONDATECLICK, p});\r\n\r\nconst date = new Date();\r\nconst getPrevLast = (y, m) => {\r\n    return new Date(y, m, 0);\r\n};\r\nconst getThisLast = (y, m) => {\r\n    return new Date(y, m + 1, 0);\r\n};\r\n\r\nconst initialState = {\r\n    year: date.getFullYear(),\r\n    month: date.getMonth(),\r\n    initDate: date.getDate(),\r\n    prevLast: getPrevLast(date.getFullYear(), date.getMonth()),\r\n    thisLast: getThisLast(date.getFullYear(), date.getMonth()),\r\n    today: {year: date.getFullYear(), month: date.getMonth(), date: date.getDate()}\r\n};\r\n\r\nfunction dateInfo(state = initialState, action) {\r\n    switch(action.type) {\r\n        case INCREASEMONTH:\r\n            date.setMonth(date.getMonth() + 1);\r\n            return {\r\n                ...state,\r\n                year: date.getFullYear(),\r\n                month: date.getMonth(),\r\n                prevLast: getPrevLast(date.getFullYear(), date.getMonth()),\r\n                thisLast: getThisLast(date.getFullYear(), date.getMonth())\r\n            };\r\n        case DECREASEMONTH:\r\n            date.setMonth(date.getMonth() - 1);\r\n            return {\r\n                ...state,\r\n                year: date.getFullYear(),\r\n                month: date.getMonth(),\r\n                prevLast: getPrevLast(date.getFullYear(), date.getMonth()),\r\n                thisLast: getThisLast(date.getFullYear(), date.getMonth())\r\n            }\r\n        case ONDATECLICK:\r\n            return {\r\n                ...state,\r\n                today: {\r\n                    year: state.year,\r\n                    month: state.month,\r\n                    date: action.p\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dateInfo;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Month from '../calendar/Month';\r\nimport { increaseMonth, decreaseMonth } from '../modules/dateInfo';\r\n\r\nconst MonthContainer = ({year, month, increaseMonth, decreaseMonth}) => {\r\n    return (\r\n        <Month year={year} month={month} onIncrease={increaseMonth} onDecrease={decreaseMonth} />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    year: state.year,\r\n    month: state.month\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    increaseMonth: () => {\r\n        dispatch(increaseMonth());\r\n    },\r\n    decreaseMonth: () => {\r\n        dispatch(decreaseMonth());\r\n    }\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MonthContainer);","import React, {useCallback, useEffect, useState} from 'react';\r\n// import {TodayConsumer} from '../contexts/today';\r\nimport './styles/Dates.scss';\r\n\r\nconst getPrevDates = (plDay, plDate, prev) => {\r\n    if(plDay !== 6) {\r\n        for(let i = 0; i < plDay + 1; i++) {\r\n            prev.unshift(plDate - i);\r\n        }\r\n    }\r\n};\r\n\r\nconst getNextDates = (tlDay, next) => {\r\n    for(let i = 1; i < 7 - tlDay; i++) {\r\n        next.push(i);\r\n    }\r\n};\r\n\r\nconst Dates = ({year, month, initDate, prevLast, thisLast, today, onDateClick, openModal}) => {\r\n    const [page, setPage] = useState([]);\r\n\r\n    const getPage = useCallback(() => {\r\n        const plDate = prevLast.getDate();\r\n        const plDay = prevLast.getDay();\r\n        const tlDate = thisLast.getDate();\r\n        const tlDay = thisLast.getDay();\r\n        const prev = [];\r\n        const current = [...Array(tlDate + 1).keys()].slice(1);\r\n        const next = [];\r\n        getPrevDates(plDay, plDate, prev);\r\n        getNextDates(tlDay, next);\r\n        setPage(prev.concat(current, next));\r\n    }, [prevLast, thisLast]);\r\n    \r\n    useEffect(() => {\r\n        getPage();\r\n    }, [year, month, initDate, getPage]);\r\n\r\n    const initPage = useCallback(() => {\r\n        const firstDateIndex = page.indexOf(1);\r\n        const lastDateIndex = page.lastIndexOf(thisLast.getDate());\r\n        if(!page) {return;}\r\n        return (page.map((p, index) => {\r\n            if(index >= firstDateIndex && index < lastDateIndex + 1) {\r\n                return (\r\n                    <div key={index} onClick={() => onDateClick(p)} className=\"dateBlock\">\r\n                        <div className={`this ${p === today.date ? 'today' : ''}`} \r\n                        onDoubleClick={openModal}>\r\n                            {p}\r\n                            <div className=\"todo\"></div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div key={index} className=\"dateBlock\"><span className=\"other\">{p}</span></div>\r\n                );\r\n            }\r\n        }));\r\n    }, [page, thisLast, today, openModal, onDateClick]);\r\n\r\n    return (\r\n        <div className=\"Dates\">\r\n            {initPage()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dates;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport{onDateClick} from '../modules/dateInfo';\r\nimport Dates from '../calendar/Dates';\r\n\r\nconst DatesContainer = ({year, month, initDate, prevLast, thisLast, today, onDateClick, openModal}) => {\r\n    return (\r\n        <Dates year={year} month={month} initDate={initDate} \r\n            prevLast={prevLast} thisLast={thisLast} today={today} onDateClick={onDateClick}\r\n            openModal={openModal}  />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    year: state.year,\r\n    month: state.month,\r\n    initDate: state.initDate,\r\n    prevLast: state.prevLast,\r\n    thisLast: state.thisLast,\r\n    today: state.today\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDateClick: p => {\r\n        dispatch(onDateClick(p))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DatesContainer);","import React from 'react';\r\nimport {MdHighlightOff} from 'react-icons/md';\r\nimport {GrNorton} from 'react-icons/gr'\r\nimport './styles/ModalItem.scss';\r\n\r\nconst ModalItem = ({todo, onRemove}) => {\r\n    return (\r\n        <div className=\"ModalItem\">\r\n            <div className=\"content\">\r\n                <GrNorton className=\"checkIcon\" />\r\n                {todo.todo}\r\n            </div>\r\n            <MdHighlightOff className=\"remove\" onClick={() => onRemove(todo.id)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalItem;","import React, {createContext, useState} from 'react';\r\n\r\nconst TodayContext = createContext({\r\n    state: {todayYear: 2000, todayMonth: 10, todayDate: 1},\r\n    actions: {\r\n        setYear: () => {},\r\n        setMonth: () => {},\r\n        setDate: () => {}\r\n    }\r\n});\r\n\r\nconst TodayProvider = ({children}) => {\r\n    const [todayYear, setTodayYear] = useState(2000);\r\n    const [todayMonth, setTodayMonth] = useState(10);\r\n    const [todayDate, setTodayDate] = useState(1);\r\n\r\n    const value = {\r\n        state: {todayYear, todayMonth, todayDate},\r\n        actions: {setTodayYear, setTodayMonth, setTodayDate}\r\n    };\r\n\r\n    return (\r\n        <TodayContext.Provider value={value}>{children}</TodayContext.Provider>\r\n    );\r\n};\r\n\r\nconst {Consumer: TodayConsumer} = TodayContext;\r\nexport {TodayProvider, TodayConsumer};\r\n\r\nexport default TodayContext;","import React, {useCallback, useState, useContext} from 'react';\r\nimport ModalItem from './ModalItem';\r\nimport TodayContext from '../contexts/today';\r\nimport './styles/Modal.scss';\r\n\r\n//날짜정보 가져와야 함 -> 리덕스 필요\r\nconst Modal = ({today, open, close}) => {\r\n    //const {state} = useContext(TodayContext)\r\n    const [modalValue, setModalValue] = useState('');\r\n    const [todoList, setTodoList] = useState([]);\r\n\r\n    const onChange = useCallback(e => {\r\n        setModalValue(e.target.value);\r\n    }, []);\r\n\r\n    const onInsert = useCallback(() => {\r\n        const nextId = todoList.length + 1;\r\n        const todo = {id: nextId, todo: modalValue}\r\n        setTodoList(todoList.concat(todo));\r\n    }, [modalValue, todoList]);\r\n\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        onInsert();\r\n        setModalValue('');\r\n    }, [onInsert]);\r\n\r\n    const onRemove = useCallback(id => {\r\n        setTodoList(todoList.filter(todo => todo.id !== id));\r\n    }, [todoList]);\r\n\r\n    return (\r\n        <div className={`Modal ${open ? 'openModal' : null}`}>\r\n            {open && (\r\n                <section>\r\n                    <header>\r\n                        <div className=\"dateinfo\">\r\n                            {`${today.year}-${today.month + 1 < 10 ? `0${today.month + 1}` : today.month + 1}-${today.date < 10 ? `0${today.date}` : today.date}`}\r\n                        </div>\r\n                    </header>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input type=\"text\" placeholder=\"todo\" value={modalValue} onChange={onChange} />\r\n                        <button className=\"insert-btn\">+</button>\r\n                    </form>\r\n                    <div className=\"list\">\r\n                        {todoList.map(t => (<ModalItem key={t.id} todo={t} onRemove={onRemove} />))}\r\n                    </div>\r\n                    <footer>\r\n                        <button className=\"close-btn\" onClick={() => {close(); setModalValue('');}}>Close</button>\r\n                    </footer>\r\n                </section>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Modal from '../calendar/Modal';\r\n\r\nconst ModalContainer = ({today, open, close}) => {\r\n    return (\r\n        <Modal today={today} open={open} close={close} />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    today: state.today\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(ModalContainer);","import React, {useState} from 'react';\r\n//import {TodayProvider} from '../contexts/today';\r\nimport Background from './Background';\r\nimport MonthContainer from '../containers/MonthContainer';\r\nimport DatesContainer from '../containers/DatesContainer';\r\nimport ModalContainer from '../containers/ModalContainer';\r\nimport {MdNavigateBefore} from 'react-icons/md';\r\nimport './styles/Calendar.scss';\r\n\r\nconst Calendar = () => {\r\n    const daysArray = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    const [modalCtrl, setModalCtrl] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setModalCtrl(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalCtrl(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Calendar\">\r\n            <Background />\r\n            <MonthContainer />\r\n            <div className=\"navSpace\">\r\n                <div className=\"nav\">\r\n                    {/* <MdNavigateBefore /> */}\r\n                </div>\r\n                <div className=\"body\">\r\n                    <div className=\"daysArray\">\r\n                        {daysArray.map(d => <div key={d} className=\"days\">{d}</div>)}\r\n                    </div>\r\n                    <DatesContainer openModal={openModal} />\r\n                </div>\r\n            </div>\r\n            <ModalContainer open={modalCtrl} close={closeModal} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\nimport Calendar from './calendar/Calendar';\n\nfunction App() {\n  return (\n    <div>\n      <Calendar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import dateInfo from './dateInfo';\r\n\r\nconst rootReducer = dateInfo;\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from './modules';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}