{"version":3,"sources":["contexts/today.js","calendar/Background.js","calendar/Month.js","calendar/Dates.js","calendar/ModalItem.js","calendar/Modal.js","calendar/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["TodayContext","createContext","state","todayYear","todayMonth","todayDate","actions","setYear","setMonth","setDate","TodayProvider","children","useState","setTodayYear","setTodayMonth","value","setTodayDate","Provider","TodayConsumer","Consumer","Background","className","Month","year","month","onIncrease","onDecrease","formMonth","dayjs","format","onClick","type","Dates","info","openModal","date","Date","prevLast","setPrevLast","thisLast","setThisLast","today","setToday","page","setPage","getPage","useCallback","plDate","getDate","plDay","getDay","tlDate","tlDay","prev","current","Array","keys","slice","next","i","unshift","getPrevDates","push","getNextDates","concat","useEffect","oneMinCall","setInterval","clearInterval","initPage","firstDateIndex","indexOf","lastDateIndex","lastIndexOf","map","p","index","onDoubleClick","ModalItem","todo","onRemove","id","Modal","open","close","useContext","modalValue","setModalValue","todoList","setTodoList","onChange","e","target","onInsert","length","onSubmit","preventDefault","filter","placeholder","t","Calendar","dates","setDates","getFullYear","getMonth","setInfo","modalCtrl","setModalCtrl","getDates","onMonthIncrease","console","log","onMonthDecrease","d","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f474c4f1.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react';\r\n\r\nconst TodayContext = createContext({\r\n    state: {todayYear: 2000, todayMonth: 10, todayDate: 1},\r\n    actions: {\r\n        setYear: () => {},\r\n        setMonth: () => {},\r\n        setDate: () => {}\r\n    }\r\n});\r\n\r\nconst TodayProvider = ({children}) => {\r\n    const [todayYear, setTodayYear] = useState(2000);\r\n    const [todayMonth, setTodayMonth] = useState(10);\r\n    const [todayDate, setTodayDate] = useState(1);\r\n\r\n    const value = {\r\n        state: {todayYear, todayMonth, todayDate},\r\n        actions: {setTodayYear, setTodayMonth, setTodayDate}\r\n    };\r\n\r\n    return (\r\n        <TodayContext.Provider value={value}>{children}</TodayContext.Provider>\r\n    );\r\n};\r\n\r\nconst {Consumer: TodayConsumer} = TodayContext;\r\nexport {TodayProvider, TodayConsumer};\r\n\r\nexport default TodayContext;","import React from 'react';\r\nimport './styles/Background.scss';\r\n\r\nconst Background = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"Background\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Background;","import React from 'react';\r\nimport {IoCaretBackSharp, IoCaretForwardSharp} from 'react-icons/io5';\r\nimport dayjs from 'dayjs';\r\nimport './styles/Month.scss';\r\n\r\nconst Month = ({year, month, onIncrease, onDecrease}) => {\r\n    const formMonth = dayjs(`${month + 1}`).format('MMMM')\r\n    //const formMonth = dayjs(`${state.initDate.getMonth() + 1}`).format('MMMM')\r\n    return (\r\n        <div className=\"Header\">\r\n            <div onClick={onDecrease}><IoCaretBackSharp /></div>\r\n            <div className=\"month\" type=\"text\">{`${formMonth} ${year}`}</div>\r\n            <div onClick={onIncrease}><IoCaretForwardSharp /></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Month;","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {TodayConsumer} from '../contexts/today';\r\nimport './styles/Dates.scss';\r\n\r\nconst getPrevDates = (plDay, plDate, prev) => {\r\n    if(plDay !== 6) {\r\n        for(let i = 0; i < plDay + 1; i++) {\r\n            prev.unshift(plDate - i);\r\n        }\r\n    }\r\n};\r\n\r\nconst getNextDates = (tlDay, next) => {\r\n    for(let i = 1; i < 7 - tlDay; i++) {\r\n        next.push(i);\r\n    }\r\n};\r\n\r\nconst Dates = ({info, openModal}) => {\r\n    const {year, month, date} = info;\r\n    const [prevLast, setPrevLast] = useState({date: new Date(year, month, 0)});\r\n    const [thisLast, setThisLast] = useState({date: new Date(year, month + 1, 0)});\r\n    const [today, setToday] = useState({year, month, date});\r\n    const [page, setPage] = useState([]);\r\n\r\n    const getPage = useCallback(() => {\r\n        const plDate = prevLast.date.getDate();\r\n        const plDay = prevLast.date.getDay();\r\n        const tlDate = thisLast.date.getDate();\r\n        const tlDay = thisLast.date.getDay();\r\n        const prev = [];\r\n        const current = [...Array(tlDate + 1).keys()].slice(1);\r\n        const next = [];\r\n        getPrevDates(plDay, plDate, prev);\r\n        getNextDates(tlDay, next);\r\n        setPage(prev.concat(current, next));\r\n    }, [prevLast, thisLast]);\r\n    \r\n    useEffect(() => {\r\n        getPage();\r\n        const oneMinCall = setInterval(() => {\r\n            setPrevLast({date: new Date(year, month, 0)});\r\n            setThisLast({date: new Date(year, month + 1, 0)});}, 1000);\r\n        //setToday({year, month: month + 1, date});\r\n        return () => clearInterval(oneMinCall);\r\n    }, [year, month, date, getPage]);\r\n\r\n    const initPage = useCallback(() => {\r\n        //console.log(page);\r\n        const firstDateIndex = page.indexOf(1);\r\n        const lastDateIndex = page.lastIndexOf(thisLast.date.getDate());\r\n        if(!page) {return;}\r\n        //console.log(firstDateIndex, lastDateIndex);\r\n        return (page.map((p, index) => {\r\n            if(index >= firstDateIndex && index < lastDateIndex + 1) {\r\n                return (\r\n                    <div key={index} onClick={() => setToday({...today, date: p})} className=\"dateBlock\">\r\n                        <TodayConsumer>\r\n                            {({actions}) => (\r\n                            <div className={`this ${p === today.date ? 'today' : ''}`} \r\n                            onDoubleClick={() => {openModal(); actions.setTodayYear(year); actions.setTodayMonth(month + 1); actions.setTodayDate(`${p}`)}}>\r\n                                {p}\r\n                                <div className=\"todo\"></div>\r\n                            </div>\r\n                            )}\r\n                        </TodayConsumer>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div key={index} className=\"dateBlock\"><span className=\"other\">{p}</span></div>\r\n                );\r\n            }\r\n        }));\r\n    }, [page, thisLast, today, openModal]);\r\n\r\n    return (\r\n        <div className=\"Dates\">\r\n            {initPage()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dates;","import React from 'react';\r\nimport {MdHighlightOff} from 'react-icons/md';\r\nimport {GrNorton} from 'react-icons/gr'\r\nimport './styles/ModalItem.scss';\r\n\r\nconst ModalItem = ({todo, onRemove}) => {\r\n    return (\r\n        <div className=\"ModalItem\">\r\n            <div className=\"content\">\r\n                <GrNorton className=\"checkIcon\" />\r\n                {todo.todo}\r\n            </div>\r\n            <MdHighlightOff className=\"remove\" onClick={() => onRemove(todo.id)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalItem;","import React, {useCallback, useState, useContext} from 'react';\r\nimport ModalItem from './ModalItem';\r\nimport TodayContext from '../contexts/today';\r\nimport './styles/Modal.scss';\r\n\r\n//날짜정보 가져와야 함 -> 리덕스 필요\r\nconst Modal = ({open, close}) => {\r\n    const {state} = useContext(TodayContext)\r\n    const [modalValue, setModalValue] = useState('');\r\n    const [todoList, setTodoList] = useState([]);\r\n\r\n    const onChange = useCallback(e => {\r\n        setModalValue(e.target.value);\r\n    }, []);\r\n\r\n    const onInsert = useCallback(() => {\r\n        const nextId = todoList.length + 1;\r\n        const todo = {id: nextId, todo: modalValue}\r\n        setTodoList(todoList.concat(todo));\r\n    }, [modalValue, todoList]);\r\n\r\n    const onSubmit = useCallback(e => {\r\n        e.preventDefault();\r\n        onInsert();\r\n        setModalValue('');\r\n    }, [onInsert]);\r\n\r\n    const onRemove = useCallback(id => {\r\n        setTodoList(todoList.filter(todo => todo.id !== id));\r\n    }, [todoList]);\r\n\r\n    return (\r\n        <div className={`Modal ${open ? 'openModal' : null}`}>\r\n            {open && (\r\n                <section>\r\n                    <header>\r\n                        <div className=\"dateinfo\">\r\n                            {`${state.todayYear}-${state.todayMonth < 10 ? `0${state.todayMonth}` : state.todayMonth}-${state.todayDate < 10 ? `0${state.todayDate}` : state.todayDate}`}\r\n                        </div>\r\n                    </header>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input type=\"text\" placeholder=\"todo\" value={modalValue} onChange={onChange} />\r\n                        <button className=\"insert-btn\">+</button>\r\n                    </form>\r\n                    <div className=\"list\">\r\n                        {todoList.map(t => (<ModalItem key={t.id} todo={t} onRemove={onRemove} />))}\r\n                    </div>\r\n                    <footer>\r\n                        <button className=\"close-btn\" onClick={() => {close(); setModalValue('');}}>Close</button>\r\n                    </footer>\r\n                </section>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, {useState, useEffect, useCallback} from 'react';\r\nimport {TodayProvider} from '../contexts/today';\r\nimport Background from './Background';\r\nimport Month from './Month';\r\nimport Dates from './Dates';\r\nimport Modal from './Modal';\r\nimport {MdNavigateBefore} from 'react-icons/md';\r\nimport './styles/Calendar.scss';\r\n\r\nconst Calendar = () => {\r\n    const [dates, setDates] = useState({date: new Date()});\r\n    const [info, setInfo] = useState({year: dates.date.getFullYear(), month: dates.date.getMonth(), date: dates.date.getDate()});\r\n    const daysArray = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    const [modalCtrl, setModalCtrl] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setModalCtrl(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalCtrl(false);\r\n    };\r\n\r\n    const getDates = useCallback(() => {\r\n        setDates({\r\n            date: new Date()\r\n        });\r\n        setInfo({\r\n            year: dates.date.getFullYear(),\r\n            month: dates.date.getMonth(),\r\n            date: dates.date.getDate()\r\n        });\r\n    }, []);\r\n\r\n    const onMonthIncrease = useCallback(() => {\r\n        console.log('increase');\r\n        if(info.month === 11) {\r\n            setInfo({\r\n                ...info,\r\n                year: info.year + 1,\r\n                month: 0\r\n            });\r\n        } else {\r\n            setInfo({...info, month: info.month + 1});\r\n        }\r\n    }, [info])\r\n\r\n    const onMonthDecrease = useCallback(() => {\r\n        console.log('decrease');\r\n        if(info.month === 0) {\r\n            setInfo({\r\n                ...info,\r\n                year: info.year - 1,\r\n                month: 11\r\n            });\r\n        } else {\r\n            setInfo({...info, month: info.month - 1});\r\n        }\r\n    }, [info])\r\n\r\n    useEffect(() => {\r\n        getDates();\r\n    }, []);\r\n\r\n    // const initYear = dates.date.getFullYear();\r\n    // const initMonth = dates.date.getMonth();\r\n    // const initDate = dates.date.getDate();\r\n    return (\r\n        <TodayProvider>\r\n            <div className=\"Calendar\">\r\n                <Background />\r\n                <Month year={info.year} month={info.month} onIncrease={onMonthIncrease} onDecrease={onMonthDecrease} />\r\n                <div className=\"navSpace\">\r\n                    <div className=\"nav\">\r\n                        {/* <MdNavigateBefore /> */}\r\n                    </div>\r\n                    <div className=\"body\">\r\n                        <div className=\"daysArray\">\r\n                            {daysArray.map(d => <div key={d} className=\"days\">{d}</div>)}\r\n                        </div>\r\n                        <Dates info={info} openModal={openModal} />\r\n                    </div>\r\n                </div>\r\n                <Modal open={modalCtrl} close={closeModal} />\r\n            </div>\r\n        </TodayProvider>\r\n    );\r\n}\r\n\r\nexport default Calendar;","import React from 'react';\nimport Calendar from './calendar/Calendar';\n\nfunction App() {\n  return (\n    <div>\n      <Calendar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}